Set up libraries: readme.PNG in source code.

Input (in input folder):
- input_<mapNumber>.txt: Contains starting and ending points 
starting_x	starting_y
ending_x	ending_y
-1
- obstacle_<mapNumber>.txt: Contains list of obstacles, each obstacle consists of 4 point (each point on a new line) ending with -1.

Output:
- (in exp2/<mapName> folder): Result of 4 algorithms in .txt file, each line of a file is the <path length, path smoothness, path safety> of an individual.
- (in testing/<mapName> folder): The path generated by 4 algorithms.

MOPSO (MOPSO/src/main/Main.java): 
Change path to input (String numberTeString = "30"; - line 26) 
and output (String FILE_URL = "exp2/mopso_test30.txt"; - line 24 and String FILE_URL_TESTING = "testing/mopso_test_point_" + numberTeString + ".txt"; - line 49) 
then execute the code. 

MOPSO (robot_NSGAII/src/main/Main.java): 
Change path to input (String numberTeString = "30"; - line 25) 
and output (String FILE_URL = "exp2/nsgaii_test29.txt"; - line 23 and String FILE_URL_TESTING = "testing/nsgaii_test_point_" + numberTeString + ".txt"; - line 82) 
then execute the code. 

MOES + VMOES (MOES/src/main/Main.java): Change path in main like above. In MOES/src/algorithm/ES.java:
- VMOES use code line 90 - 120 (try catch that use python code) and comment line 131 - 144.
- MOES comment code line 90 - 120 (try catch that use python code) and ues code line 131 - 144 (opposite to VMOES).
- After changing as above, run MOES/src/main/Main.java

Use exp2/hypervolume_pymoo.py to generate hypervolume figure, remember to change map name in line 9.

Use drawing/src/drawing/Main.java to generate map figure (including path of 4 algorithms), remember to change file path in line 23 - 39.

Chosen maps for final validation (in folder input/):
- map1a: map 16
- map1b: map 21
- map2a: map 18
- map2b: map 28
- map3a: map 22
- map3b: map 24
- map4a: map 26
- map4b: map 27
- map5a: map 29
- map5b: map 30
